function load() {
    //preload();
    //loadscroll();
};
function LocaleFormat() {
  //Create a known date string
  var y = new Date(2020, 9, 25);
  //var lds = y.toLocaleDateString('en-US');
  var lds = y.toLocaleDateString();
  //search for the position of the year, day, and month
  var yPosi = lds.search("2020");
  var dPosi = lds.search("25");
  var mPosi = lds.search("10");
  //Sometimes the month is displayed by the month name so guess where it is
  if(mPosi == -1)
  {
      mPosi = lds.search("9");
      if(mPosi == -1)
      {
          //if the year and day are not first then maybe month is first
          if(yPosi != 0 && dPosi != 0)
          {
              mPosi = 0;
          }
          //if year and day are not last then maybe month is last
          else if((yPosi+4 <  lds.length) && (dPosi+2 < lds.length)){
              mPosi = Infinity;
          }
          //otherwist is in the middle
          else  if(yPosi < dPosi){
              mPosi = ((dPosi - yPosi)/2) + yPosi;            
          }else if(dPosi < yPosi){
              mPosi = ((yPosi - dPosi)/2) + dPosi;
          }   
      }

  }
  var formatString="";
  var order = [yPosi, dPosi, mPosi];
  order.sort(function(a,b){return a-b});
  for(i=0; i < order.length; i++)
  {
      if(order[i] == yPosi)
      {
          formatString += "Y.";
      }else if(order[i] == dPosi){
          formatString += "d.";
      }else if(order[i] == mPosi){
          formatString += "m.";
      }
  }
  formatString = formatString.substring(0, formatString.length-1);
  return formatString;
}
function loadscroll() {
    window.onscroll = function() {
        var poss = (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop
        if (poss >= 100) {
            //iteration();
            //alert(getCookie("consent"));
            var alertcookie = getCookie('consent');
            if(typeof alertcookie === 'undefined') {
              document.getElementById('alertcookie').style.display = "block";
            }
            window.onscroll = null;
        } 
    }
}
/* Preload */
function preload(){UIkit.toggle('.uk-preload',{animation:'uk-animation-preload',duration:500}).toggle()};
/* Preload */
/* Iteration */
function iteration() {
    function getRandomInRange(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min
    };
    var iteration = document.querySelectorAll('input[name="iteration"]');
    for (var element of iteration) {
      var iteration_value = element.value;
      element.value = iteration_value * getRandomInRange(3, 5)
    }
  };
  /* Iteration */
  /* Mask */
  function setCursorPosition(e, t) {
    t.focus(), t.setSelectionRange ? t.setSelectionRange(e, e) : t.createTextRange && ((t = t.createTextRange()).collapse(!0), t.moveEnd("character", e), t.moveStart("character", e), t.select())
  }
  
  function mask(e) {
    console.log("mask", e);
    var t = this.placeholder,
      s = 0,
      e = t.replace(/\D/g, ""),
      n = this.value.replace(/\D/g, "");
    e.length >= n.length && (n = e), t = t.replace(/[_\d]/g, function (e) {
      return n.charAt(s++) || "_"
    }), this.value = t, this.dispatchEvent(new Event('input')), /* Обновление поля */ (s = t.lastIndexOf(n.substr(-1))) < t.length && t != this.placeholder ? s++ : s = t.indexOf("_"), setCursorPosition(s, this)
  }
  
  function maskPhone() {
    this.addEventListener("input", mask, !0), this.focus(), setCursorPosition(4, this) /* comit *//* this.value = this.placeholder *//* comit */
  };
  /* Mask */
  /* input */
  function inputAction() {
    this.classList.add("uk-active")
  };
  function inputLine() {
    this.parentNode.parentNode.classList.add("uk-slide")
  };
  /* input */
  /* Font */
  ! function () {
    function e() {
      var e = document.createElement("style");
      e.rel = "stylesheet", document.head.appendChild(e), e.textContent = localStorage.sourceSwebixFont
    }
    try {
      var t;
      localStorage.sourceSwebixFont ? e() : ((t = new XMLHttpRequest).open("GET", "/css/font.css", !0), t.onload = function () {
        200 <= t.status && t.status < 400 && (localStorage.sourceSwebixFont = t.responseText, e())
      }, t.send())
    } catch (e) {}
  }();
  /* Font */
  
  /* Cookie */
  function consent() {
    getCookie("consent") ? "false" == getCookie("consent") && notify_cookie() : (setCookie("consent", "false"), notify_cookie())
  }
  function agree_cookie() {
    setCookie("consent", "true")
    UIkit.toggle("#alertcookie").toggle();
  };
  function notify_cookie() {
    let container = document.getElementById('bottom');
    let request = createRequestObject();
    if (request) {
        request.responseType =	'text';
        request.open('POST', '/cookie', true);
        request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        request.setRequestHeader('X-CSRF-TOKEN', document.head.querySelector('[name=csrf-token]').content );
        request.send();
        request.onreadystatechange = function () {
            if (request.readyState == 4) {
                container.innerHTML = request.responseText
            }
        }
    }
  };
  /* Cookie */
  /* Modal Consent */
  function showContent() {
    let cont = document.getElementById(this.getAttribute('data-position'));
    let loading = document.getElementById(this.getAttribute('data-load'));
    let link = this.getAttribute('data-link');
    cont.innerHTML = loading.innerHTML;
    let http = createRequestObject();
    if (http) {
        http.responseType =	'text';
        http.open('POST', '/load?position=' + encodeURIComponent(link), true);
        http.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        http.setRequestHeader('X-CSRF-TOKEN', document.head.querySelector('[name=csrf-token]').content );
        http.send();
        http.onreadystatechange = function () {
            if (http.readyState == 4) {
                cont.innerHTML = http.responseText
            }
        }
    } else {
        document.location = link
    }
  }
  function showContentLink() {
    let cont = document.getElementById('consentBody');
    let loading = document.getElementById('consentloading');
    let link = 'con-consent';
    cont.innerHTML = loading.innerHTML;
    let http = createRequestObject();
    if (http) {
        http.responseType =	'text';
        http.open('POST', '/load?position=' + encodeURIComponent(link), true);
        http.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        http.setRequestHeader('X-CSRF-TOKEN', document.head.querySelector('[name=csrf-token]').content );
        http.send();
        http.onreadystatechange = function () {
            if (http.readyState == 4) {
                cont.innerHTML = http.responseText
            }
        }
    } else {
        document.location = link
    }
  }
  /* Modal Consent */
  /* Ajax */
  function createRequestObject() {
    try {
        return new XMLHttpRequest()
    } catch (e) {
        try {
        return new ActiveXObject('Msxml2.XMLHTTP')
        } catch (e) {
        try {
            return new ActiveXObject('Microsoft.XMLHTTP')
        } catch (e) {
            return null
        }
        }
    }
  }
  /* Ajax */